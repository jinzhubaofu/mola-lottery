{"version":3,"sources":["Lottery.js"],"names":["prefixer","userAgent","navigator","guid","Math","random","substr","toString","Lottery","args","draw","bind","closeDialog","state","status","rotate","componentWillUnmount","timer","clearTimeout","token","startRotating","rotateDegree","props","Promise","setState","setTimeout","resolve","stopRotating","reject","floor","getRotate","index","total","prizeRotate","begin","datasource","prizeAmount","promise","timeout","error","statusInfo","all","then","data","info","prize","id","getGiftStyle","transition","transform","renderDialog","errorImage","backgroundImage","buttons","image","url","type","push","render","frameImage","prizesImage","prizesImageScale","style","backgroundSize","prefix","displayName","propTypes","string","isRequired","defaultProps"],"mappings":"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","file":"Lottery.js","sourcesContent":["/**\n * @file Lottery\n * @author ludafa<ludafa@outlook.com>\n */\n\nimport React, {Component, PropTypes} from 'react';\nimport Prefixer from 'inline-style-prefixer';\nimport {registerComponent} from 'mola';\nimport jsonp from 'jsonp-es6';\nimport {type, level} from './constants';\n\nconst prefixer = new Prefixer({\n    userAgent: navigator.userAgent\n});\n\nfunction guid() {\n    return (+(Math.random() + '').substr(2, 8)).toString(36);\n}\n\nclass Lottery extends Component {\n\n    constructor(...args) {\n\n        super(...args);\n\n        this.draw = this.draw.bind(this);\n        this.closeDialog = this.closeDialog.bind(this);\n\n        this.state = {\n            status: 'stopped',\n            rotate: 0\n        };\n\n\n    }\n\n    componentWillUnmount() {\n        if (this.timer) {\n            clearTimeout(this.timer);\n            this.timer = null;\n        }\n        this.token = null;\n    }\n\n    startRotating() {\n\n        const rotateDegree = +this.props.rotateDegree;\n\n        return new Promise(resolve => {\n\n            this.setState({\n                status: 'drawing',\n                rotate: rotateDegree + this.state.rotate\n            });\n\n            this.timer = setTimeout(\n                () => {\n                    this.timer = null;\n                    resolve();\n                },\n                3000\n            );\n\n        });\n\n    }\n\n    stopRotating(rotate) {\n\n        return new Promise((resolve, reject) => {\n\n            this.setState({\n                status: 'stopping',\n                rotate: +this.props.rotateDegree\n                    + (Math.floor(this.state.rotate / 360) * 360)\n                    + rotate\n            });\n\n            this.timer = setTimeout(\n                () => {\n                    this.timer = null;\n                    this.setState({\n                        status: 'stopped',\n                        rotate\n                    });\n                    resolve();\n                },\n                4000\n            );\n\n        });\n\n    }\n\n    getRotate(index, total) {\n\n        if (index === 404) {\n            return 0;\n        }\n\n        const prizeRotate = (360 / total);\n        const begin = prizeRotate / 2;\n\n        return index * prizeRotate + begin;\n\n    }\n\n    draw() {\n\n        // 正在转的，不给再转\n        if (this.state.status !== 'stopped') {\n            return;\n        }\n\n        const {\n            datasource,\n            prizeAmount\n        } = this.props;\n\n        // 数据请求：这个 promise 不会 reject\n        const promise = jsonp(datasource, {}, {timeout: 1600})\n            .catch(\n                error => ({\n                    status: error.status || 500,\n                    statusInfo: error.statusInfo || '服务繁忙，请稍候再试'\n                })\n            );\n\n        // 请求 token\n        const token = this.token = guid();\n\n        // 数据请求的同时把转盘转起来！我把转盘转上五环！\n        Promise\n            .all([promise, this.startRotating()])\n\n            // 数据请求结束了，转盘也转够圈了，我们把转盘停下来\n            .then(([data]) => {\n\n                if (this.token !== token) {\n                    return;\n                }\n\n                let rotate = this.getRotate(\n                    data && data.status === 0 ? data.info.prize.id : 404,\n                    prizeAmount\n                );\n\n                return this\n                    // 这里我们最终是需要 API 的返回数据的\n                    .stopRotating(rotate)\n                    // 转完了来个弹窗提示\n                    .then(() => {\n                        this.setState({\n                            prize: data\n                        });\n                    });\n\n            });\n\n\n\n    }\n\n    getGiftStyle(status, rotate) {\n\n        switch (status) {\n            case 'drawing':\n                return {\n                    transition: 'transform 3s ease-in',\n                    transform: `rotate(${rotate}deg)`\n                };\n            case 'stopping':\n                return {\n                    transition: 'transform 3s ease-out',\n                    transform: `rotate(${rotate}deg)`\n                };\n            case 'stopped':\n                return {\n                    transform: `rotate(${rotate}deg)`\n                };\n            default:\n                return {};\n        }\n\n    }\n\n    closeDialog() {\n        this.setState({prize: null});\n    }\n\n    renderDialog(prize) {\n\n        if (!prize) {\n            return null;\n        }\n\n        let errorImage = this.props.errorImage;\n\n        let {\n            status,\n            info\n        } = prize;\n\n        let backgroundImage;\n\n        let buttons = [\n            <div\n                key=\"again\"\n                className=\"mola-lottery-dialog-button-again\"\n                onClick={this.closeDialog} />\n        ];\n\n        if (status === 0) {\n\n            let {\n                image = errorImage,\n                url,\n                type\n            } = info.prize;\n\n            if (type !== 'default' && url) {\n                buttons.push(\n                    <a\n                        key=\"checkout\"\n                        href={url}\n                        className=\"mola-lottery-dialog-button-checkout\" />\n                );\n            }\n\n            backgroundImage = image;\n\n        }\n        else {\n            backgroundImage = errorImage;\n        }\n\n\n        return (\n            <div className=\"mola-lottery-pop-window\">\n                <div\n                    className=\"mola-lottery-dialog\"\n                    style={{\n                        backgroundImage: `url(${backgroundImage})`\n                    }}>\n                    <div\n                        className=\"mola-lottery-dialog-close\"\n                        onClick={this.closeDialog} />\n                    <footer className=\"mola-lottery-dialog-footer\">\n                        {buttons}\n                    </footer>\n                </div>\n            </div>\n        );\n\n    }\n\n    render() {\n\n        const {\n            frameImage,\n            prizesImage,\n            prizesImageScale,\n            style = null\n        } = this.props;\n\n        const {\n            status,\n            rotate,\n            prize\n        } = this.state;\n\n\n        return (\n            <div className=\"mola-lottery\" style={style}>\n                <div className=\"mola-lottery-frame\">\n                    <img\n                        src={frameImage}\n                        className=\"mola-lottery-frame-img\" />\n                    <div\n                        className=\"mola-lottery-prizes\"\n                        style={{\n                            backgroundImage: `url(${prizesImage})`,\n                            backgroundSize: `${prizesImageScale}%`,\n                            ...prefixer.prefix(\n                                this.getGiftStyle(status, rotate)\n                            )\n                        }} />\n                    <div className=\"mola-lottery-play\" onClick={this.draw} />\n                </div>\n                {this.renderDialog(prize)}\n            </div>\n        );\n\n    }\n\n}\n\nLottery.displayName = 'Lottery';\n\nLottery.propTypes = {\n\n    // 框图片\n    frameImage: PropTypes.string.isRequired,\n\n    // 奖品转盘图片\n    prizesImage: PropTypes.string.isRequired,\n\n    // 奖品转盘图片缩放比例\n    prizesImageScale: PropTypes.string.isRequired,\n\n    // 奖品种类数量\n    prizeAmount: PropTypes.string.isRequired,\n\n    // 数据源配置\n    datasource: PropTypes.string.isRequired,\n\n    // 出错提示框背景图片\n    errorImage: PropTypes.string.isRequired,\n\n    // top: PropTypes.string.isRequired,\n\n    // rotate degree\n    rotateDegree: PropTypes.string.isRequired\n\n\n};\n\nLottery.defaultProps = {\n    prizesImageScale: '62.5',\n    errorImage: 'http://boscdn.bpc.baidu.com/mms-res/voicefe/activity/captain/react/404card.jpg',\n    rotateDegree: '1800'\n};\n\nexport default registerComponent(type, level)(Lottery);\n"]}
{"version":3,"sources":["Lottery.js"],"names":["type","level","ROTATE_BASE_DEG","ERROR_IMAGE","prefixer","userAgent","navigator","guid","Lottery","args","draw","bind","state","status","rotate","componentWillUnmount","timer","clearTimeout","token","startRotating","Promise","setState","setTimeout","resolve","stopRotating","reject","Math","floor","getRotate","index","total","prizeRotate","begin","props","datasource","prizeAmount","promise","timeout","error","statusInfo","all","then","data","info","prize","id","getGiftStyle","transition","transform","renderDialog","backgroundImage","buttons","image","url","push","dialogClose","render","frameImage","prizesImage","prizesImageScale","style","prefix","backgroundSize","displayName","defaultProps","propTypes","string","isRequired","number"],"mappings":"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","file":"Lottery.js","sourcesContent":["/**\n * @file Lottery\n * @author ludafa<ludafa@outlook.com>\n */\n\nimport React, {Component, PropTypes} from 'react';\nimport Prefixer from 'inline-style-prefixer';\nimport {MOLA_COMPONENT_LEVEL_CONTAINER, registerComponent} from 'mola';\nimport jsonp from 'jsonp-es6';\n\nexport const type = 'Lottery';\nexport const level = MOLA_COMPONENT_LEVEL_CONTAINER;\n\nconst ROTATE_BASE_DEG = 1800;\nconst ERROR_IMAGE = 'http://boscdn.bpc.baidu.com/mms-res/voicefe/activity/captain/react/404card.jpg';\n\nconst prefixer = new Prefixer({\n    userAgent: navigator.userAgent\n});\n\nlet guid = 1;\n\nclass Lottery extends Component {\n\n    constructor(...args) {\n\n        super(...args);\n\n        this.draw = this.draw.bind(this);\n\n        this.state = {\n            status: 'stopped',\n            rotate: 0\n        };\n\n    }\n\n    componentWillUnmount() {\n        if (this.timer) {\n            clearTimeout(this.timer);\n            this.timer = null;\n        }\n        this.token = null;\n    }\n\n    startRotating() {\n\n        return new Promise(resolve => {\n\n            this.setState({\n                status: 'drawing',\n                rotate: this.state.rotate + ROTATE_BASE_DEG\n            });\n\n            this.timer = setTimeout(() => {\n                this.timer = null;\n                resolve();\n            }, 3000);\n\n        });\n\n    }\n\n    stopRotating(rotate) {\n\n        return new Promise((resolve, reject) => {\n\n            this.setState({\n                status: 'stopping',\n                rotate: ROTATE_BASE_DEG\n                    + (Math.floor(this.state.rotate / 360) * 360)\n                    + rotate\n            });\n\n            this.timer = setTimeout(() => {\n\n                this.timer = null;\n\n                this.setState({\n                    status: 'stopped',\n                    rotate\n                });\n\n                resolve();\n\n            }, 4000);\n\n        });\n\n    }\n\n    getRotate(index, total) {\n\n        if (index === 404) {\n            return 0;\n        }\n\n        const prizeRotate = (360 / total);\n        const begin = prizeRotate / 2;\n\n        return index * prizeRotate + begin;\n\n    }\n\n    draw() {\n\n        // 正在转的，不给再转\n        if (this.state.status !== 'stopped') {\n            return;\n        }\n\n        const {\n            datasource,\n            prizeAmount\n        } = this.props;\n\n        // 数据请求：这个 promise 不会 reject\n        const promise = jsonp(datasource, {}, {timeout: 1600}).catch(error => {\n            return {\n                status: error.status || 500,\n                statusInfo: error.statusInfo || '服务繁忙，请稍候再试'\n            };\n        });\n\n        // 请求 token\n        const token = this.token = guid++;\n\n        // 数据请求的同时把转盘转起来！我把转盘转上五环！\n        Promise.all([promise, this.startRotating()])\n\n            // 数据请求结束了，转盘也转够圈了，我们把转盘停下来\n            .then(([data]) => {\n\n                if (this.token !== token) {\n                    return;\n                }\n\n                let rotate = this.getRotate(\n                    data && data.status === 0 ? data.info.prize.id : 404,\n                    prizeAmount\n                );\n\n                // 这里我们最终是需要 API 的返回数据的\n                return this.stopRotating(rotate)\n                    // 转完了来个弹窗提示\n                    .then(() => {\n                        this.setState({\n                            prize: data\n                        });\n                    });\n\n            });\n\n\n\n    }\n\n    getGiftStyle(status, rotate) {\n\n        switch (status) {\n            case 'drawing':\n                return {\n                    transition: 'transform 3s ease-in',\n                    transform: `rotate(${rotate}deg)`\n                };\n            case 'stopping':\n                return {\n                    transition: 'transform 3s ease-out',\n                    transform: `rotate(${rotate}deg)`\n                };\n            case 'stopped':\n                return {\n                    transform: `rotate(${rotate}deg)`\n                };\n            default:\n                return {};\n        }\n\n    }\n\n    renderDialog(prize) {\n\n        if (!prize) {\n            return null;\n        }\n\n        const {\n            status,\n            info\n        } = prize;\n\n        let backgroundImage = ERROR_IMAGE;\n\n        const buttons = [\n            <div\n                key=\"again\"\n                className=\"mola-lottery-dialog-button-again\"\n                onClick={() => {\n                    this.setState({\n                        prize: null\n                    });\n                }} />\n        ];\n\n        if (status === 0) {\n\n            const {\n                image,\n                url,\n                type\n            } = info;\n\n            if (type !== 'default' && url) {\n                buttons.push(\n                    <a\n                        key=\"checkout\"\n                        href={url}\n                        className=\"mola-lottery-dialog-button-checkout\" />\n                );\n            }\n\n            backgroundImage = image || backgroundImage;\n\n        }\n\n\n        return (\n            <div className=\"mola-lottery-pop-window\">\n                <div\n                    className=\"mola-lottery-dialog\"\n                    style={{backgroundImage: `url(${backgroundImage})`}}>\n                    <div\n                        className=\"mola-lottery-dialog-close\"\n                        onClick={this.dialogClose} />\n                    <footer className=\"mola-lottery-dialog-footer\">\n                        {buttons}\n                    </footer>\n                </div>\n            </div>\n        );\n\n    }\n\n    render() {\n\n        const {\n            frameImage,\n            prizesImage,\n            prizesImageScale\n        } = this.props;\n\n        const {\n            status,\n            rotate,\n            prize\n        } = this.state;\n\n        const style = prefixer.prefix(this.getGiftStyle(status, rotate));\n\n        return (\n            <div className=\"mola-lottery\">\n                <div className=\"mola-lottery-frame\">\n                    <img\n                        src={frameImage}\n                        className=\"mola-lottery-frame-img\" />\n                    <div\n                        className=\"mola-lottery-prizes\"\n                        style={{\n                            backgroundImage: `url(${prizesImage})`,\n                            backgroundSize: `${prizesImageScale * 100}%`,\n                            ...style\n                        }} />\n                    <div className=\"mola-lottery-play\" onClick={this.draw} />\n                </div>\n                {this.renderDialog(prize)}\n            </div>\n\n        );\n\n    }\n\n}\n\nLottery.displayName = 'Lottery';\n\nLottery.defaultProps = {\n    prizesImageScale: 0.625\n};\n\nLottery.propTypes = {\n\n    // 框图片\n    frameImage: PropTypes.string.isRequired,\n\n    // 奖品转盘图片\n    prizesImage: PropTypes.string.isRequired,\n\n    // 奖品转盘图片缩放比例\n    prizesImageScale: PropTypes.number.isRequired,\n\n    // 奖品种类数量\n    prizeAmount: PropTypes.number.isRequired,\n\n    // 数据源配置\n    datasource: PropTypes.string.isRequired\n\n};\n\nexport default registerComponent(type, level)(Lottery);\n"]}